/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api.pheno;

import io.swagger.model.pheno.EventsResponse;
import io.swagger.annotations.*;

import org.brapi.test.BrAPITestServer.exceptions.BrAPIServerException;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import jakarta.validation.Valid;

@javax.annotation.processing.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-03-20T16:32:22.556Z[GMT]")
@Api(value = "events", description = "the events API")
public interface EventsApi {

	@ApiOperation(value = "Get the Events", nickname = "eventsGet", notes = "Get list of events", response = EventsResponse.class, authorizations = {
			@Authorization(value = "AuthorizationToken") }, tags = { "Events", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "OK", response = EventsResponse.class),
			@ApiResponse(code = 400, message = "Bad Request", response = String.class),
			@ApiResponse(code = 401, message = "Unauthorized", response = String.class),
			@ApiResponse(code = 403, message = "Forbidden", response = String.class) })
	@RequestMapping(value = "/events", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<EventsResponse> eventsGet(
			@ApiParam(value = "eventDbId") @Valid @RequestParam(value = "eventDbId", required = false) String eventDbId,
			@ApiParam(value = "studyDbId") @Valid @RequestParam(value = "studyDbId", required = false) String studyDbId,
			@ApiParam(value = "observationUnitDbId") @Valid @RequestParam(value = "observationUnitDbId", required = false) String observationUnitDbId,
			@ApiParam(value = "eventType") @Valid @RequestParam(value = "eventType", required = false) String eventType,
			@ApiParam(value = "dateRangeStart") @Valid @RequestParam(value = "dateRangeStart", required = false) String dateRangeStart,
			@ApiParam(value = "dateRangeEnd") @Valid @RequestParam(value = "dateRangeEnd", required = false) String dateRangeEnd,
			@ApiParam(value = "page") @Valid @RequestParam(value = "page", required = false) Integer page,
			@ApiParam(value = "pageSize") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,
			@ApiParam(value = "HTTP HEADER - Token used for Authorization   <strong> Bearer {token_string} </strong>") @RequestHeader(value = "Authorization", required = false) String authorization)
			throws BrAPIServerException;

}
